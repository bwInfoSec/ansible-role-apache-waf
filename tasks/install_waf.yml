---
- name: Install packages {{ packages|join(', ') }}
  ansible.builtin.package:
    name: "{{ packages }}"
    state: present
    update_cache: true

- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ apache_user }}"
    group: "{{ apache_user }}"
    state: directory
    mode: "0700"
  with_items:
    - "{{ crs_conf_dir }}"
    - "{{ modsec_conf_dir }}"
    - "{{ modsec_tmp_dir }}"
    - "{{ modsec_log_dir }}"
    - "{{ modsec_data_dir }}"

- name: Fetch OWASP Core Rule Set (CRS)
  ansible.builtin.git:
    repo: 'https://github.com/coreruleset/coreruleset.git'
    dest: "{{ crs_dir }}"
    version: "{{ crs_version }}"
    force: true
  changed_when: "result.changed and not ('molecule-idempotence-notest' in ansible_skip_tags)"
  register: result

- name: Create Apache WAF configuration
  ansible.builtin.template:
    src: "waf.conf.j2"
    dest: "{{ apache_conf_dir }}/waf.conf"
    mode: '0644'
    force: true

- name: Check if default config is used
  ansible.builtin.set_fact:
    crs_default_config_used: "{{ crs_conf_src_template.endswith('/crs-setup.conf.example') }}"

# Copy either the example config...
- name: Copy crs-setup.conf.example to crs-setup.conf
  ansible.builtin.copy:
    src: "{{ crs_dir }}/crs-setup.conf.example"
    dest: "{{ crs_conf_dir }}/crs-setup.conf"
    mode: '0644'
    remote_src: true
    force: true
  when: crs_default_config_used

# ... or template out the custom config.
- name: Template custom crs-setup.conf to crs-setup.conf
  ansible.builtin.template:
    src: "{{ crs_conf_src_template }}"
    dest: "{{ crs_conf_dir }}/crs-setup.conf"
    mode: '0644'
    force: true
  when: not crs_default_config_used

- name: Set files for redhat
  when: ansible_facts['os_family']|lower == 'redhat'
  block:
    - name: Remove default modsecurity config file
      ansible.builtin.file:
        path: /etc/httpd/conf.d/mod_security.conf
        state: absent

    - name: Remove default modsecurity config directory
      ansible.builtin.file:
        path: /etc/httpd/mod_security.d
        state: absent

- name: Set files for debian
  when: ansible_facts['os_family']|lower == 'debian'
  block:
    - name: Enable loading of security2
      ansible.builtin.file:
        src: /etc/apache2/mods-available/security2.load
        dest: /etc/apache2/mods-enabled/security2.load
        state: link

    - name: Disable default security2.conf
      ansible.builtin.file:
        path: /etc/apache2/mods-enabled/security2.conf
        state: absent

- name: Create modsecurity config file
  ansible.builtin.template:
    src: "{{ modsec_conf_src_template }}"
    dest: "{{ modsec_conf }}"
    mode: 0644
  notify: "Restart service apache2"

- name: Create unicode mapping file
  ansible.builtin.template:
    src: unicode.mapping
    dest: "{{ modsec_unicode_mapping_file }}"
    mode: 0644
  notify: "Restart service apache2"

- name: Remove error prone rule
  ansible.builtin.file:
    path: "{{ crs_dir }}/rules/REQUEST-922-MULTIPART-ATTACK.conf"
    state: absent
  when: "crs_version == 'v3.3.4'"
  changed_when: "result.changed and 'molecule-idempotence-notest' not in ansible_skip_tags"
  register: result

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
